// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  email         String @unique
  name          String?
  username      String @unique
  password      String
  profileImage  String?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  refreshToken  RefreshToken[]

  Tweet         Tweet[]
}

model RefreshToken {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  token       String @unique

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String @db.ObjectId
  user        User @relation(fields: [userId], references: [id])
}

model Tweet {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  text        String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Author
  author      User @relation(fields: [authorId], references: [id])
  authorId    String @db.ObjectId

  replyToId   String? @db.ObjectId
  replies     Tweet[] @relation("replies")
  replyTo     Tweet?  @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // Media files
}